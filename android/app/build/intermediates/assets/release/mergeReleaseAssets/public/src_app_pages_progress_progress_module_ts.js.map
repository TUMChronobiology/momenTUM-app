{"version":3,"file":"src_app_pages_progress_progress_module_ts.js","mappings":"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","sources":["./src/app/pages/progress/progress-routing.module.ts","./src/app/pages/progress/progress.module.ts","./src/app/pages/progress/progress.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProgressPage } from './progress.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProgressPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProgressPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ProgressPageRoutingModule } from './progress-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ProgressPage } from './progress.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule.forChild(),\n    ProgressPageRoutingModule\n  ],\n  declarations: [ProgressPage]\n})\nexport class ProgressPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport * as moment from 'moment';\nimport { SurveyDataService } from '../../services/survey-data/survey-data.service';\nimport { StudyTasksService } from '../../services/study-task/study-tasks.service';\nimport { TranslateConfigService } from '../../translate-config.service';\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.page.html',\n  styleUrls: ['./progress.page.scss'],\n})\nexport class ProgressPage {\n  // array to store the graphs\n  graphs: Array<any> = new Array();\n\n  // array to store the history\n  history: Array<any> = new Array();\n\n  // flag for study enrolment\n  enrolledInStudy = false;\n\n  // study object JSON\n  studyJSON: any;\n\n  // current study day\n  studyDay: number;\n\n  // the current language of the device\n  selectedLanguage: string;\n\n  // graph options\n  chartOptions: any = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontSize: 6,\n          },\n          barThickness: 20,\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontSize: 8,\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  // graph colours\n  chartColors: Array<any> = [\n    {\n      backgroundColor: 'rgba(4,153,139,0.6)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n    },\n    {\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)',\n    },\n    {\n      backgroundColor: 'rgba(148,159,177,0.2)',\n      borderColor: 'rgba(148,159,177,1)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n    },\n  ];\n\n  constructor(\n    private storage: Storage,\n    private studyTasksService: StudyTasksService,\n    private surveyDataService: SurveyDataService,\n    private translateConfigService: TranslateConfigService\n  ) {\n    // get the default language of the device\n    this.selectedLanguage =\n      this.translateConfigService.getDefaultLanguage() || 'en';\n  }\n\n  ionViewWillEnter() {\n    this.graphs = [];\n    this.history = [];\n    this.enrolledInStudy = false;\n\n    Promise.all([\n      this.storage.get('current-study'),\n      this.storage.get('enrolment-date'),\n    ]).then((values) => {\n      const studyObject = values[0];\n      const enrolmentDate = values[1];\n\n      if (studyObject !== null) {\n        this.studyJSON = JSON.parse(studyObject);\n        this.enrolledInStudy = true;\n\n        // calculate the study day\n        this.studyDay = this.diffDays(new Date(enrolmentDate), new Date());\n\n        // log the user visiting this tab\n        this.surveyDataService.logPageVisitToServer({\n          timestamp: moment().format(),\n          milliseconds: moment().valueOf(),\n          page: 'my-progress',\n          event: 'entry',\n          module_index: -1,\n        });\n\n        // check if any graphs are available and add history items\n        this.studyTasksService.getAllTasks().then((tasks) => {\n          // get all entries for history\n          for (const task of tasks) {\n            if (task.completed && task.response_time) {\n              const historyItem = {\n                task_name: task.name.replace(/<\\/?[^>]+(>|$)/g, ''),\n                moment_time: moment(task.response_time).fromNow(), //format(\"Do MMM, YYYY\").fromNow()\n                response_time: new Date(task.response_time),\n              };\n              this.history.unshift(historyItem);\n            }\n          }\n          // sort the history array by completion time\n          this.history.sort((x, y) => x.resonse_time - y.response_time);\n\n          // get all graphs\n          for (const module of this.studyJSON.modules) {\n            const graph = module.graph;\n            const study_name = module.name;\n            const graph_header = module.name;\n\n            // if the module is to display a graph\n            if (graph.display) {\n              // get the variable to graph\n              const variableToGraph = graph.variable;\n\n              // store the labels and data for this module\n              const task_labels = [];\n              const task_data = [];\n\n              const graph_title = graph.title;\n              const graph_blurb = graph.blurb;\n              const graph_type = graph.type;\n              const graph_maxpoints = -graph.max_points;\n\n              // loop through each study_task\n              for (const task of tasks) {\n                // check if the task is this task\n                if (task.name === study_name) {\n                  if (task.completed && task.responses) {\n                    // get the variable we are to graph\n                    for (const k in task.responses) {\n                      if (k === variableToGraph) {\n                        // format the response time\n                        const response_time = moment(task.response_time).format(\n                          'MMM Do, h:mma'\n                        );\n                        task_labels.push(response_time);\n                        task_data.push(task.responses[k]);\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n\n              // create a new graph object\n              const graphObj = {\n                data: [\n                  {\n                    data: task_data.slice(graph_maxpoints),\n                    label: graph_title,\n                  },\n                ],\n                labels: task_labels.slice(graph_maxpoints),\n                options: this.chartOptions,\n                colors: this.chartColors,\n                legend: graph_title,\n                type: graph_type,\n                blurb: graph_blurb,\n                header: graph_header,\n              };\n\n              // if the task had any data to graph, push it\n              if (task_data.length > 0) {\n                this.graphs.push(graphObj);\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  diffDays(d1: Date, d2: Date) {\n    let ndays = 0;\n    const tv1 = d1.valueOf(); // msec since 1970\n    const tv2 = d2.valueOf();\n\n    ndays = (tv2 - tv1) / 1000 / 86400;\n    ndays = Math.round(ndays - 0.5);\n    return ndays;\n  }\n\n  async ionViewWillLeave() {\n    if (this.enrolledInStudy) {\n      this.surveyDataService.logPageVisitToServer({\n        timestamp: moment().format(),\n        milliseconds: moment().valueOf(),\n        page: 'my-progress',\n        event: 'exit',\n        module_index: -1,\n      });\n    }\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}