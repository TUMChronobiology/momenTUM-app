{"version":3,"file":"src_app_pages_pvt_pvt_module_ts.js","mappings":"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","sources":["./src/app/pages/pvt/pvt-routing.module.ts","./src/app/pages/pvt/pvt.module.ts","./src/app/pages/pvt/pvt.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PvtPage } from './pvt.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PvtPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PvtPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PvtPageRoutingModule } from './pvt-routing.module';\n\nimport { PvtPage } from './pvt.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PvtPageRoutingModule\n  ],\n  declarations: [PvtPage]\n})\nexport class PvtPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SurveyDataService } from '../../services/survey-data/survey-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { StudyTasksService } from '../../services/study-task/study-tasks.service';\nimport { Storage } from '@ionic/storage-angular';\n\n@Component({\n  selector: 'app-pvt',\n  templateUrl: './pvt.page.html',\n  styleUrls: ['./pvt.page.scss'],\n})\nexport class PvtPage implements OnInit {\n  // INPUT from study\n  trials: number;\n  min: number;\n  max: number;\n  showResults: boolean;\n  timeToTimeout: number;\n  enableExit: boolean;\n  submitText: string;\n\n  // OUTPUT\n  moduleName: string;\n  moduleIndex: number;\n  reactionTimes: number[];\n  alertTime: string;\n\n  // HELPER VARIABLES:\n  reacted: boolean;\n  reactedTooEarly: boolean;\n  reactedTooLate: boolean;\n  state: 'instructions' | 'countdown' | 'RTT' | 'results';\n  counter: number; // countdown\n  timer: number; // for RTT page\n  instructionTimer: any; // for instructions page\n  exited: boolean;\n  tooLateMessage = 'too late';\n  tooEarlyMessage = 'too early';\n\n  constructor(\n    private surveyDataService: SurveyDataService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private studyTasksService: StudyTasksService,\n    private storage: Storage\n  ) {\n    this.reactionTimes = [];\n    this.state = 'instructions';\n    this.exited = false;\n    this.reactedTooLate = false;\n    this.reactedTooEarly = false;\n  }\n\n  /**\n   * Sets up the variables.\n   * (Angular lifecycle hook method.\n   * Check out https://angular.io/guide/lifecycle-hooks for more documentation)\n   * */\n  async ngOnInit() {\n    await this.setUpVariables();\n    this.instructionRTT();\n  }\n\n  /**\n   * Handles the \"start\" button behavior.\n   * Launches the whole process from counting down to finishing the RTT.\n   * */\n  async start() {\n    this.state = 'countdown' // load view of countdown\n    await this.countdown(3);\n    this.state = 'RTT'; // load view of RTT\n    await this.RTT();\n    if (this.exited) {\n      return;\n    }\n    this.exit();\n  }\n\n  /**\n   * Handles the exit buttons behavior.\n   * Submits the results.\n   * Either loads the results page or navigates to the homepage.\n   * */\n  async exit() {\n    this.exited = true;\n    if (this.showResults) {\n      this.state = 'results';\n      this.submit();\n    }\n    else {\n      this.submit();\n      this.navHome();\n    }\n  }\n\n  /**\n   * Navigates to the homepage of the app.\n   * */\n  async navHome() {\n    return this.router.navigate(['/']);\n  }\n\n  /**\n   * Counts down to 0. The number being counted down is stored in the **counter** variable of this class.\n   * @param from the number (in seconds) deciding the start of the countdown.\n   * */\n  private async countdown(from: number) {\n    this.state = 'countdown';\n    this.counter = from;\n    while (this.counter > 0) {\n      await this.sleep(1000);\n      this.counter--;\n    }\n  }\n\n  /**\n   * Conducts the RTT (reaction time test).\n   * */\n  private async RTT() {\n    let trialCount = 1;\n    while (trialCount <= this.trials && !this.exited) {\n      // reset variables\n      this.timer = -1;\n      this.reacted = false;\n      this.reactedTooEarly = false;\n      this.reactedTooLate = false;\n\n      // calculate random time to wait\n      let wait = PvtPage.getUniformRand(this.min, this.max);\n\n      // wait for random amount of time while checking if the user exited or the user reacted\n      let start = Date.now();\n      while (!(Date.now() - start > wait || this.exited || this.reacted)) {\n        await this.sleep(0);\n      }\n\n      // run the timer, but only if the user neither reacted nor exited the game.\n      if (!(this.reacted || this.exited)) {\n        await this.runTimer();\n      }\n      await this.handleResult();\n\n      // show the result for a bit\n      await this.sleep(2000);\n\n      trialCount++;\n    }\n  }\n\n  /**\n   * Runs the timer as long as the following 3 conditions are met:\n   * - the user didn't react\n   * - the user didn't exit the game\n   * - the timer didn't reach a bigger value than the timeToTimeout constant defined in the study file.\n   * */\n  private async runTimer() {\n    this.timer = 0;\n    const start = Date.now();\n    do {\n      this.timer = Date.now() - start; // update timer\n      await this.sleep(0);\n    } while (!this.reacted && !this.exited && this.timer < this.timeToTimeout);\n  }\n\n  /**\n   * Decides what to do with the result. There are the following 4 cases, which are handled by this method:\n   * - exited early.\n   * - reacted too early.\n   * - reacted too late.\n   * - reacted correctly.\n   * */\n  private async handleResult() {\n    if (this.exited) {\n      return;\n    }\n    else if (this.timer === -1) {\n      this.reactedTooEarly = true;\n      this.timer = -1;\n      this.reactionTimes.push(-2);\n      this.trials++;\n    }\n    else if (this.timer > this.timeToTimeout) {\n      this.reactedTooLate = true;\n      this.timer = -1;\n      this.reactionTimes.push(-1);\n      this.trials++;\n    }\n    else {\n      this.reactionTimes.push(this.timer);\n    }\n  }\n\n\n  /**\n   * Conducts a fake RTT for the instruction page.\n   * */\n  private async instructionRTT() {\n    while (this.state === 'instructions') {\n      this.instructionTimer = undefined;\n      await this.sleep(this.min + Math.random() * (this.max - this.min));\n      await this.runInstructionTimer();\n      await this.sleep(2000);\n    }\n  }\n\n  /**\n   * Starts the fake timer and ends it after a random amount of time, between 250 and 350 ms\n   * */\n  private async runInstructionTimer() {\n    this.instructionTimer = 0;\n    const runTime = 250 + Math.random()*100;\n    const start = Date.now();\n    do {\n      this.instructionTimer = Date.now() - start;\n      await this.sleep(0);\n    } while (this.instructionTimer < runTime);\n  }\n\n  /**\n   * Defines all Input variables, which are defined in the study.\n   * */\n  private async setUpVariables() {\n    const task_id = this.route.snapshot.paramMap.get('task_id')\n    await this.getModule(task_id)\n      .then((module) => {\n        this.trials = module.trials;\n        this.min = module.min_waiting;\n        this.max = module.max_waiting;\n        this.moduleName = module.name;\n        this.showResults = module.show;\n        this.timeToTimeout = module.max_reaction;\n        this.enableExit = module.exit;\n        this.submitText = module.submit_text;\n      });\n  }\n\n  /**\n   * Finds a module in the local storage by one of its task_id's.\n   * @param task_id the task_id of a task of this module.\n   * @returns A Promise with the correct module from the local storage.\n   * */\n  private async getModule(task_id: string | null): Promise<any> {\n    return this.studyTasksService\n      .getAllTasks()\n      .then((tasks) => {\n        for (const task of tasks) {\n          if (task_id === String(task.task_id)) {\n            this.moduleIndex = task.index;\n            this.alertTime = moment(task.time).format();\n            break;\n          }\n        }\n        return this.storage.get('current-study');\n      })\n      .then((studyObject) => JSON.parse(studyObject).modules[this.moduleIndex]);\n  }\n\n\n  /**\n   * Composes the output data and sends it to the server.\n   * */\n  private async submit() {\n    const surveyData = {\n      module_index: this.moduleIndex,\n      module_name: this.moduleName,\n      entries: this.reactionTimes,\n      response_time: moment().format(),\n      response_time_in_ms: moment().valueOf(),\n      alert_time: this.alertTime,\n    };\n    return this.surveyDataService.sendSurveyDataToServer(surveyData);\n  }\n\n  /**\n   * Waits for a certain amount of milliseconds.\n   * @param ms number of milliseconds that the function waits\n   * @returns a promise\n   * */\n  private sleep(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Uses Math.random() to calculate a uniformly distributed random number between min and max.\n   * @param min minimum number that can be generated.\n   * @param max maximum number that can be generated.\n   * @returns a uniformly distributed random number between the parameters.\n   * */\n  private static getUniformRand(min: number, max: number): number {\n    return  min + Math.random() * (max - min);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}