{"version":3,"file":"default-src_app_pages_home_home_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEhB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;KACpB;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBO;AACM;AACF;AAEA;AAEiB;AACR;AACf;IAY1B,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAV1B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAwB,EAAE;YAC1B,uEAAqB;SACtB;QACD,YAAY,EAAE,CAAC,gDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBuB;AACQ;AACT;AACQ;AACc;AAC7B;AACyB;AACgB;AACD;AACI;AACvB;AACiB;AACS;AACd;AAC1C;AACuC;AAEhB;AACD;IAO1C,QAAQ,SAAR,QAAQ;IAuCnB,YACU,cAA8B,EAC9B,iBAAoC,EACpC,oBAA0C,EAC1C,kBAAsC,EACtC,iBAAoC,EACpC,WAAwB,EACxB,MAAc,EACd,QAAkB,EAClB,SAAoB,EACpB,cAA8B,EAC9B,eAAgC,EAChC,kBAAsC,EACtC,OAAgB,EAChB,sBAA8C,EAC9C,SAA2B;QAd3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAW;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,YAAO,GAAP,OAAO,CAAS;QAChB,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,cAAS,GAAT,SAAS,CAAkB;QAnDrC,gCAAgC;QAChC,qBAAgB,GAAG,IAAI,CAAC;QACxB,0DAA0D;QAC1D,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kCAAkC;QAClC,UAAK,GAAiB,IAAI,CAAC;QAC3B,uDAAuD;QACvD,cAAS,GAAU,EAAE,CAAC;QACtB,YAAY;QACZ,aAAQ,GAAG,KAAK,CAAC;QAEjB,wDAAwD;QACxD,gEAAgE;QAChE,yBAAyB;QACzB,iBAAY,GAAG;YACb,UAAU,EAAE,QAAQ;YACpB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,OAAO;YAClB,eAAe,EAAE,WAAW;YAC5B,cAAc,EAAE,UAAU;YAC1B,uBAAuB,EACrB,kHAAkH;YACpH,qBAAqB,EACnB,iHAAiH;YACnH,aAAa,EAAE,SAAS;YACxB,aAAa,EAAE,YAAY;YAC3B,WAAW,EAAE,kDAAkD;YAC/D,UAAU,EACR,4FAA4F;SAC/F,CAAC;QAwBA,IAAI,CAAC,gBAAgB;YACnB,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC;IAC7D,CAAC;IAED,WAAW;QACT,IAAI,uEAAoB,EAAE,KAAK,OAAO,EAAE;YACtC,aAAa;YACb,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YACjE,uEAAoB,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,aAAa;YACb,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAChE,uEAAoB,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;IACH,CAAC;IAED,QAAQ;QACN,yCAAyC;QACzC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC;QAErD,yCAAyC;QACzC,8EAA2B,EAAE,CAAC;QAE9B,2CAA2C;QAC3C,6CAA6C;QAC7C,qDAAqD;QACrD,sDAAsD;QACtD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACrC,IAAI,KAAK,YAAY,6DAAe,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;gBAC3F,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;QAEH,wEAAwE;QACxE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,YAAY,EAAE;gBACpC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;oBAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,gBAAgB;;YACpB,qBAAqB;YACrB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,8BAA8B,CAAC,CAAC,OAAO,CAAC;YAE1E,4DAA4D;YAC5D,MAAM,MAAM,GAAG;gBACb,YAAY;gBACZ,aAAa;gBACb,WAAW;gBACX,eAAe;gBACf,cAAc;gBACd,uBAAuB;gBACvB,qBAAqB;gBACrB,eAAe;gBACf,eAAe;gBACf,aAAa;gBACb,YAAY;aACb,CAAC;YACF,aAAa;YACb,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC3C,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;YAE5C,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,KAAK,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAE7D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAE/B,+CAA+C;YAC/C,IAAI;gBACF,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aAChC;YAAC,WAAM;gBACN,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aAC7B;YACD,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC/D,MAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,WAAW,KAAK,IAAI,EAAE;oBACxB,qCAAqC;oBACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBAErC,iCAAiC;oBACjC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;wBAC1C,SAAS,EAAE,oCAAM,EAAE,CAAC,MAAM,EAAE;wBAC5B,YAAY,EAAE,oCAAM,EAAE,CAAC,OAAO,EAAE;wBAChC,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,OAAO;wBACd,YAAY,EAAE,CAAC,CAAC;qBACjB,CAAC,CAAC;oBAEH,qDAAqD;oBACrD,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;oBACxD,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;oBAEzD,qCAAqC;oBACrC,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,CAAC;oBAEnD,uBAAuB;oBACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,IAAI,IAAI,CAAC,cAAc,EAAE;wBACvB,uBAAuB;wBACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;qBAC/B;iBACF;YACH,CAAC,CAAC,CAAC;YAEH,6CAA6C;YAC7C,4CAA4C;YAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC5C,IAAI,CAAC,OAAO,EAAE;oBACZ,aAAa;oBACb,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;oBAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC/B,+BAA+B;oBAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;oBACnC,4CAA4C;oBAC5C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;iBACjD;YACH,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,gCAAgC;YAChC,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;gBAC1C,SAAS,EAAE,oCAAM,EAAE,CAAC,MAAM,EAAE;gBAC5B,YAAY,EAAE,oCAAM,EAAE,CAAC,OAAO,EAAE;gBAChC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,MAAM;gBACb,YAAY,EAAE,CAAC,CAAC;aACjB,CAAC,CAAC;YAEH,qDAAqD;YACrD,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;YACxD,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;SAC1D;IACH,CAAC;IAED;;;;;OAKG;IACG,sBAAsB,CAAC,GAAW,EAAE,QAAiB;;YACzD,mBAAmB;YACnB,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,KAAK,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;YAE7D,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBAC/D,2EAA2E;gBAC3E,iEAAiE;gBACjE,aAAa;gBACb,MAAM,KAAK,GAAU,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC7C,4EAA4E;gBAC5E,0EAA0E;gBAC1E,8BAA8B;gBAC9B,MAAM,UAAU,GACd,KAAK,CAAC,UAAU,KAAK,SAAS,IAAI,aAAa;oBAC/C,KAAK,CAAC,OAAO,KAAK,SAAS,IAAI,aAAa;oBAC5C,KAAK,CAAC,UAAU,CAAC,QAAQ,KAAK,SAAS,CAAC;gBAC1C,IAAI,UAAU,EAAE;oBACd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBAC1B;aACF;YAAC,OAAO,CAAC,EAAE;gBACV,mBAAmB;gBACnB,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBAC/D,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,uBAAuB;oBACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;iBAC/B;gBACD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;aAClC;QACH,CAAC;KAAA;IACD;;OAEG;IACG,WAAW;;YACf,IAAI,CAAC,cAAc;iBAChB,IAAI,EAAE;iBACN,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;oBAC1B,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBACrD;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;oBAClC,uBAAuB;oBACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;iBAC/B;gBACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAED;;OAEG;IACG,QAAQ;;YACZ,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC;gBAC1C,QAAQ,EAAE,YAAY;gBACtB,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,KAAK;wBACX,WAAW,EAAE,6BAA6B;wBAC1C,KAAK,EAAE,UAAU;qBAClB;iBACF;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU;wBAClC,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,WAAW;qBACtB;oBACD;wBACE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;wBACjC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;4BACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;wBACnD,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED;;;OAGG;IACG,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;gBACzC,QAAQ,EAAE,YAAY;gBACtB,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,MAAM;wBACZ,WAAW,EAAE,cAAc;qBAC5B;iBACF;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU;wBAClC,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,WAAW;qBACtB;oBACD;wBACE,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;wBACjC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE;4BACpB,uBAAuB;4BACvB,MAAM,GAAG,GACP,kDAAkD,GAAG,QAAQ,CAAC,EAAE,CAAC;4BACnE,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;wBAC1C,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED;;;;OAIG;IACG,YAAY,CAAC,KAAY;;YAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAE7B,uCAAuC;YACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,wBAAwB;YACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAE/C,+DAA+D;YAC/D,IAAI,CAAC,OAAO;iBACT,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAChD,IAAI,CAAC,GAAS,EAAE,CAAC;;gBAChB,0BAA0B;gBAC1B,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;oBAC1C,SAAS,EAAE,oCAAM,EAAE,CAAC,MAAM,EAAE;oBAC5B,YAAY,EAAE,oCAAM,EAAE,CAAC,OAAO,EAAE;oBAChC,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,OAAO;oBACd,YAAY,EAAE,CAAC,CAAC;iBACjB,CAAC,CAAC;gBAEH,oEAAoE;gBACpE,IAAI,UAAI,CAAC,KAAK,0CAAE,UAAU,CAAC,KAAK,EAAE;oBAChC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;wBACtC,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC;wBACrC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;oBAC7D,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACnD;gBACD,+BAA+B;gBAC/B,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBACvD,0BAA0B;gBAC1B,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,CAAC;gBAEnD,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3D,CAAC,EAAC,CAAC;QACP,CAAC;KAAA;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;gBACjC,IAAI,CAAC,MAAM,GAAG,oCAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;aAC7C;YAED,uBAAuB;YACvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAE7B,2DAA2D;YAC3D,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,yCAAyC;YACzC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;gBAClC,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,IAAI,CAAC,cAAc,EAAE;wBACvB,uBAAuB;wBACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;qBAC/B;gBACH,CAAC,EAAE,IAAI,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACG,iBAAiB,CAAC,QAAiB;;YACvC,MAAM,GAAG,GAAG,QAAQ;gBAClB,CAAC,CAAC,kHAAkH;gBACpH,CAAC,CAAC,uHAAuH,CAAC;YAC5H,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,GAAG;gBACZ,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,CAAC,SAAS,CAAC;aACrB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED;;OAEG;IACG,mBAAmB;;YACvB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,qBAAqB;gBAC7B,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,UAAU;gBACrC,OAAO,EAAE,CAAC,SAAS,CAAC;aACrB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED;;OAEG;IACH,aAAa;QACX,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,SAA+B;QACvC,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE;YAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QACD,UAAU,CAAC,GAAG,EAAE;YACd,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC9B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CACF;;YA/dQ,6EAAc;YACd,wFAAiB;YAKjB,8FAAoB;YAHpB,2FAAkB;YADlB,uFAAiB;YAEjB,oEAAW;YATX,oDAAM;YAIN,qDAAQ;YAFR,mEAAS;YAQT,qFAAc;YAPd,4DAAe;YASf,sFAAkB;YAXlB,4DAAO;YAaP,8EAAsB;YAGtB,kEAAgB;;AAOZ,QAAQ;IALpB,yDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA+B;;KAEhC,CAAC;GACW,QAAQ,CA4cpB;AA5coB;;;;;;;;;;;;;;;;;;;ACzBsB;AACQ;IAKtC,cAAc,SAAd,cAAc;IAIzB,YAAmB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAHvD,cAAS,GAAG,KAAK,CAAC;QAClB,cAAS,GAAG,KAAK,CAAC;IAEwC,CAAC;IAE3D;;;;OAIG;IACG,OAAO,CAAC,GAAW;;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,MAAM,IAAI,CAAC,iBAAiB;iBAChC,MAAM,CAAC;gBACN,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,UAAU;gBACnB,QAAQ,EAAE,IAAI;aACf,CAAC;iBACD,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACV,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;wBACnB,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;qBACzD;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAED;;OAEG;IACG,OAAO;;YACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,iEAAiE;YACzF,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;YACrD,IAAI,MAAM,EAAE;gBACV,uBAAuB;gBACvB,OAAO,MAAM,CAAC,OAAO,EAAE,CAAC;aACzB;iBAAM;gBACL,OAAO;aACR;QACH,CAAC;KAAA;CACF;;YA/CQ,6DAAiB;;AAKb,cAAc;IAH1B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CA0C1B;AA1C0B;;;;;;;;;;;;;;;;;;;;ACNgB;AACM;AAC0B;IAM9D,oBAAoB,SAApB,oBAAoB;IAC/B,YACU,kBAAsC,EACtC,OAAgB;QADhB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,YAAO,GAAP,OAAO,CAAS;IACvB,CAAC;IAEJ;;;;OAIG;IACH,yBAAyB;QACvB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,OAAO;YACb,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,EAAE;YACvD,SAAS,EAAE,yBAAyB;YACpC,IAAI,EAAE,wBAAwB;YAC9B,IAAI,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE;YACvB,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,CAAC;SACZ,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,oBAAoB,CAAC,IAAU;QAC7B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAC/B,EAAE,EAAE,IAAI,CAAC,OAAO;YAChB,KAAK,EAAE,IAAI,CAAC,WAAW;YACvB,IAAI,EAAE,IAAI,CAAC,aAAa;YACxB,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;YAChD,SAAS,EAAE,yBAAyB;YACpC,IAAI,EAAE,wBAAwB;YAC9B,IAAI,EAAE;gBACJ,UAAU,EAAE,IAAI,CAAC,KAAK;gBACtB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,SAAS,EAAE,IAAI,CAAC,IAAI;aACrB;YACD,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;YACZ,QAAQ,EAAE,CAAC;SACZ,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,sBAAsB;QACpB,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;IACtC,CAAC;IAED;;OAEG;IACG,sBAAsB;;YAC1B,MAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;YAE1C,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CACjD,uBAAuB,CACxB,CAAC;YAEF,IAAI,oBAAoB,EAAE;gBACxB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBACpD,IAAI,KAAK,KAAK,IAAI,EAAE;oBAClB,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;wBACxB,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;wBAElD,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE;4BAC1B,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;gCACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gCAChC,UAAU,EAAE,CAAC;6BACd;yBACF;wBAED,qCAAqC;wBACrC,IAAI,UAAU,KAAK,EAAE,EAAE;4BACrB,MAAM;yBACP;qBACF;iBACF;aACF;YAED;;;;;;;;;;;;;;;;;;;;;;;;iBAwBK;QACP,CAAC;KAAA;IAED;;;;OAIG;IACH,mBAAmB,CAAC,IAAU,EAAE,WAAmB;QACjD,oCAAoC;QACpC,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;QACjC,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;YAC3B,IAAI,CAAC,CAAC,SAAS,EAAE;gBACf,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAC5B;SACF;QAED,wCAAwC;QACxC,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC5B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBAC/B,MAAM,GAAG,KAAK,CAAC;gBACf,MAAM;aACP;SACF;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;;YArJQ,qFAAkB;YADlB,2DAAO;;AAOH,oBAAoB;IAHhC,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CA+IhC;AA/IgC;;;;;;;;;;;;;;;;;;;;;;ACRU;AAIF;AAC2B;AACX;AACR;IAMpC,kBAAkB,SAAlB,kBAAkB;IAU7B,YACU,YAA0B,EAC1B,IAAU,EACV,OAAgB,EAChB,cAA8B;QAH9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,SAAI,GAAJ,IAAI,CAAM;QACV,YAAO,GAAP,OAAO,CAAS;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAbxC,QAAG,GAAQ,MAAM,CAAC;QAElB,iBAAY,GAA6B,EAAE,CAAC;QAC5C,2BAAsB,GAAW,EAAE,CAAC;QACpC,mBAAc,GAA6B,EAAE,CAAC;QAC9C,uBAAkB,GAAW,EAAE,CAAC;QAChC,eAAU,GAAG,CAAC,CAAC;QACf,yBAAoB,GAAG,CAAC,CAAC;IAOtB,CAAC;IAEJ;;;;OAIG;IACG,YAAY,CAAC,GAAW;;YAC5B,IAAI;gBACF,MAAM,QAAQ,GAAuB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;gBAEhE,gCAAgC;gBAChC,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAChC,MAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC/C,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;gBACrC,MAAM,IAAI,GAAc,MAAM,QAAQ,CAAC,QAAQ,CAC7C,GAAG,EACH,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,QAAQ,EAClC,IAAI,CACL,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;gBAC7B,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;aACrB;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;gBAC/B,OAAO,EAAE,CAAC;aACX;QACH,CAAC;KAAA;IAED;;;;OAIG;IACH,YAAY,CAAC,KAAY;QACvB,iBAAiB;QACjB,aAAa;QACb,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC;QAEvD,+BAA+B;QAC/B,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,OAAO,EAAE;YAClC,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;gBACrC,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAC7C,CAAC,QAAQ,EAAqB,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,OAAO,CAC3D,CAAC;gBACF,KAAK,MAAM,QAAQ,IAAI,cAAc,EAAE;oBACrC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;iBAC/C;aACF;SACF;QACD,6CAA6C;QAC7C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;IAC1D,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAC9B,uCAAuC;QACvC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,2BAA2B;QAC3B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC1D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;oBACtB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAClD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;gBAC1D,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;OAEG;IACH,eAAe;QACb,IAAI,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,UAAU,EAAE;YACjD,IAAI,CAAC,sBAAsB,EAAE,CAAC;SAC/B;IACH,CAAC;IAED;;OAEG;IACH,sBAAsB;QACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACrD,IAAI;gBACF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAC5C,8BAA8B;gBAC9B,aAAa;gBACb,WAAW,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBAE/D,8DAA8D;gBAC9D,+BAA+B;gBAC/B,KAAK,MAAM,MAAM,IAAI,WAAW,CAAC,OAAO,EAAE;oBACxC,KAAK,MAAM,OAAO,IAAI,MAAM,EAAE;wBAC5B,KAAK,MAAM,QAAQ,IAAI,OAAO,EAAE;4BAC9B,IAAI,QAAQ,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,EAAE;gCACtC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;6BACjD;4BACD,IAAI,QAAQ,CAAC,OAAO,KAAK,OAAO,EAAE;gCAChC,aAAa;gCACb,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;6BAC7C;yBACF;qBACF;iBACF;gBAED,uCAAuC;gBACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;aAChE;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;aAC5B;YAED,8BAA8B;YAC9B,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,uBAAuB;gBACvB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA7JC,yEAAY;YAIL,wDAAI;YACJ,2DAAO;YAFP,4EAAc;;AAQV,kBAAkB;IAH9B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAkJ9B;AAlJ8B;;;;;;;;;;;;;;;ACbxB,MAAM,WAAW;IAGtB,MAAM,CAAC,eAAe;QACpB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,KAAK,MAAM,CAAC,CAAC;IACzD,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,SAAkB;QAChC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QAEpD,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QAChE,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;IACtD,CAAC;IACD,MAAM,CAAC,QAAQ;QACb,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;CACF","sources":["./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.ts","./src/app/services/loading/loading-service.service.ts","./src/app/services/notification/notifications.service.ts","./src/app/services/survey-cache/survey-cache.service.ts","./src/app/shared/change-theme.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule.forChild(),\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Storage } from '@ionic/storage-angular';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { AlertController, RefresherCustomEvent } from '@ionic/angular';\nimport { Platform } from '@ionic/angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { SurveyDataService } from '../../services/survey-data/survey-data.service';\nimport { StudyTasksService } from '../../services/study-task/study-tasks.service';\nimport { SurveyCacheService } from '../../services/survey-cache/survey-cache.service';\nimport { UuidService } from '../../services/uuid/uuid.service';\nimport { LoadingService } from '../../services/loading/loading-service.service';\nimport { NotificationsService } from '../../services/notification/notifications.service';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport * as moment from 'moment';\nimport { TranslateConfigService } from '../../translate-config.service';\nimport { Study } from 'types';\nimport { ChangeTheme } from '../../shared/change-theme';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  // resume event subscription\n  resumeEvent: any;\n  // flag to display enrol options\n  hideEnrolOptions = true;\n  // track whether the user is currently enrolled in a study\n  isEnrolledInStudy = false;\n  // stores the details of the study\n  study: Study | null = null;\n  // stores the list of tasks to be completed by the user\n  task_list: any[] = [];\n  // dark mode\n  darkMode = false;\n\n  //translations loaded from the appropriate language file\n  // defaults are provided but will be overridden if language file\n  // is loaded successfully\n  translations = {\n    btn_cancel: 'Cancel',\n    btn_dismiss: 'Dismiss',\n    btn_enrol: 'Enrol',\n    'btn_enter-url': 'Enter URL',\n    'btn_study-id': 'Study ID',\n    'error_loading-qr-code':\n      \"We couldn't load your study. Please check your internet connection and ensure you are scanning the correct code.\",\n    'error_loading-study':\n      \"We couldn't load your study. Please check your internet connection and ensure you are entering the correct URL.\",\n    heading_error: 'Oops...',\n    label_loading: 'Loading...',\n    msg_caching: 'Downloading media for offline use - please wait!',\n    msg_camera:\n      'Camera permission is required to scan QR codes. You can allow this permission in Settings.',\n  };\n\n  safeURL: string;\n\n  // the current language of the device\n  selectedLanguage: string;\n\n  constructor(\n    private barcodeScanner: BarcodeScanner,\n    private surveyDataService: SurveyDataService,\n    private notificationsService: NotificationsService,\n    private surveyCacheService: SurveyCacheService,\n    private studyTasksService: StudyTasksService,\n    private uuidService: UuidService,\n    private router: Router,\n    private platform: Platform,\n    private statusBar: StatusBar,\n    private loadingService: LoadingService,\n    private alertController: AlertController,\n    private localNotifications: LocalNotifications,\n    private storage: Storage,\n    private translateConfigService: TranslateConfigService,\n    private translate: TranslateService\n  ) {\n    this.selectedLanguage =\n      this.translateConfigService.getDefaultLanguage() || 'en';\n  }\n\n  toggleTheme() {\n    if (ChangeTheme.getTheme() === 'light') {\n      // @ts-ignore\n      document.querySelector('ion-icon').setAttribute('name', 'sunny');\n      ChangeTheme.setTheme(true);\n      this.darkMode = true;\n    } else {\n      // @ts-ignore\n      document.querySelector('ion-icon').setAttribute('name', 'moon');\n      ChangeTheme.setTheme(false);\n      this.darkMode = false;\n    }\n  }\n\n  ngOnInit() {\n    // set statusBar to be visible on Android\n    this.statusBar.styleLightContent();\n    this.statusBar.backgroundColorByHexString('#0F2042');\n\n    // Theme set to the stored preferred type\n    ChangeTheme.initializeTheme();\n\n    // need to subscribe to this event in order\n    // to ensure that the page will refresh every\n    // time it is navigated to because ionViewWillEnter()\n    // is not called when navigating here from other pages\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationStart && event.url === '/' && !this.loadingService.isLoading) {\n        this.ionViewWillEnter();\n      }\n    });\n\n    // trigger this to run every time the app is resumed from the background\n    this.resumeEvent = this.platform.resume.subscribe(() => {\n      if (this.router.url === '/tabs/tab1') {\n        if (!this.loadingService.isLoading) {\n          this.ionViewWillEnter();\n        }\n      }\n    });\n  }\n\n  async ionViewWillEnter() {\n    // check if dark mode\n    this.darkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    // load the correct translations for dynamic labels/messages\n    const labels = [\n      'btn_cancel',\n      'btn_dismiss',\n      'btn_enrol',\n      'btn_enter-url',\n      'btn_study-id',\n      'error_loading-qr-code',\n      'error_loading-study',\n      'heading_error',\n      'label_loading',\n      'msg_caching',\n      'msg_camera',\n    ];\n    // @ts-ignore\n    this.translate.get(labels).subscribe((res) => {\n      this.translations = res;\n    });\n\n    this.localNotifications.requestPermission();\n\n    this.loadingService.isCaching = false;\n    this.loadingService.present(this.translations.label_loading);\n\n    this.hideEnrolOptions = true;\n    this.isEnrolledInStudy = false;\n\n    // check if user is currently enrolled in study\n    try {\n      await this.storage.get('uuid');\n    } catch {\n      console.log('Storage did not exist, creating');\n      await this.storage.create();\n    }\n    Promise.all([this.storage.get('current-study')]).then((values) => {\n      const studyObject = values[0];\n      if (studyObject !== null) {\n        // convert the study to a JSON object\n        this.study = JSON.parse(studyObject);\n\n        // log the user visiting this tab\n        this.surveyDataService.logPageVisitToServer({\n          timestamp: moment().format(),\n          milliseconds: moment().valueOf(),\n          page: 'home',\n          event: 'entry',\n          module_index: -1,\n        });\n\n        // attempt to upload any pending logs and survey data\n        this.surveyDataService.uploadPendingData('pending-log');\n        this.surveyDataService.uploadPendingData('pending-data');\n\n        // set up next round of notifications\n        this.notificationsService.setNext30Notifications();\n\n        // load the study tasks\n        this.loadStudyDetails();\n      } else {\n        this.hideEnrolOptions = false;\n        if (this.loadingService) {\n          // Added this condition\n          this.loadingService.dismiss();\n        }\n      }\n    });\n\n    // on first run, generate a UUID for the user\n    // and set the notifications-enabled to true\n    this.storage.get('uuid-set').then((uuidSet) => {\n      if (!uuidSet) {\n        // set a UUID\n        const uuid = this.uuidService.generateUUID('');\n        this.storage.set('uuid', uuid);\n        // set a flag that UUID was set\n        this.storage.set('uuid-set', true);\n        // set a flag that notifications are enabled\n        this.storage.set('notifications-enabled', true);\n      }\n    });\n  }\n\n  /**\n   * Lifecycle event called when the current page is about to become paused/closed\n   */\n  ionViewWillLeave() {\n    if (this.isEnrolledInStudy) {\n      // log the user exiting this tab\n      this.surveyDataService.logPageVisitToServer({\n        timestamp: moment().format(),\n        milliseconds: moment().valueOf(),\n        page: 'home',\n        event: 'exit',\n        module_index: -1,\n      });\n\n      // attempt to upload any pending logs and survey data\n      this.surveyDataService.uploadPendingData('pending-log');\n      this.surveyDataService.uploadPendingData('pending-data');\n    }\n  }\n\n  /**\n   * Attempt to download a study from the URL scanned/entered by a user\n   *\n   * @param url The URL to attempt to download a study from\n   * @param isQRCode\n   */\n  async attemptToDownloadStudy(url: string, isQRCode: boolean) {\n    // show loading bar\n    this.loadingService.isCaching = false;\n    this.loadingService.present(this.translations.label_loading);\n\n    try {\n      const result = await this.surveyDataService.getRemoteData(url);\n      // check if the data received from the URL contains JSON properties/modules\n      // in order to determine if it's a schema study before continuing\n      // @ts-ignore\n      const study: Study = JSON.parse(result.data);\n      // checks if the returned text is parseable as JSON, and whether it contains\n      // some of the key fields used by schema so it can determine whether it is\n      // actually a schema study URL\n      const validStudy =\n        study.properties !== undefined && // @ts-ignore\n        study.modules !== undefined && // @ts-ignore\n        study.properties.study_id !== undefined;\n      if (validStudy) {\n        this.enrolInStudy(study);\n      }\n    } catch (e) {\n      // @ts-expect-error\n      console.log('JSON Invalid format: exception: ' + e.message, e);\n      if (this.loadingService) {\n        // Added this condition\n        this.loadingService.dismiss();\n      }\n      this.displayEnrolError(isQRCode);\n    }\n  }\n  /**\n   * Uses the barcode scanner to enrol in a study\n   */\n  async scanBarcode() {\n    this.barcodeScanner\n      .scan()\n      .then((barcodeData) => {\n        if (!barcodeData.cancelled) {\n          this.attemptToDownloadStudy(barcodeData.text, true);\n        }\n      })\n      .catch((err) => {\n        if (!this.loadingService.isLoading) {\n          // Added this condition\n          this.loadingService.dismiss();\n        }\n        this.displayBarcodeError();\n      });\n  }\n\n  /**\n   * Handles the alert dialog to enrol via URL\n   */\n  async enterURL() {\n    const alert = await this.alertController.create({\n      header: this.translations['btn_enter-url'],\n      cssClass: 'alertStyle',\n      inputs: [\n        {\n          name: 'url',\n          type: 'url',\n          placeholder: 'e.g. https://bit.ly/2Q4O9jI',\n          value: 'https://',\n        },\n      ],\n      buttons: [\n        {\n          text: this.translations.btn_cancel,\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: this.translations.btn_enrol,\n          handler: (response) => {\n            this.attemptToDownloadStudy(response.url, false);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  /**\n   *\n   * Handles the alert dialog to enrol via Study ID\n   */\n  async enterStudyID() {\n    const alert = await this.alertController.create({\n      header: this.translations['btn_study-id'],\n      cssClass: 'alertStyle',\n      inputs: [\n        {\n          name: 'id',\n          type: 'text',\n          placeholder: 'e.g. STUDY01',\n        },\n      ],\n      buttons: [\n        {\n          text: this.translations.btn_cancel,\n          role: 'cancel',\n          cssClass: 'secondary',\n        },\n        {\n          text: this.translations.btn_enrol,\n          handler: (response) => {\n            // create URL for study\n            const url =\n              'https://tuspl22-momentum.srv.mwn.de/api/surveys/' + response.id;\n            this.attemptToDownloadStudy(url, false);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  /**\n   * Enrols the user in the study, sets up notifications and tasks\n   *\n   * @param study\n   */\n  async enrolInStudy(study: Study) {\n    this.isEnrolledInStudy = true;\n    this.hideEnrolOptions = true;\n\n    // convert received data to JSON object\n    this.study = study;\n\n    // set the enrolled date\n    this.storage.set('enrolment-date', new Date());\n\n    // set an enrolled flag and save the JSON for the current study\n    this.storage\n      .set('current-study', JSON.stringify(this.study))\n      .then(async () => {\n        // log the enrolment event\n        this.surveyDataService.logPageVisitToServer({\n          timestamp: moment().format(),\n          milliseconds: moment().valueOf(),\n          page: 'home',\n          event: 'enrol',\n          module_index: -1,\n        });\n\n        // cache all media files if this study has set this property to true\n        if (this.study?.properties.cache) {\n          this.loadingService.dismiss().then(() => {\n            this.loadingService.isCaching = true;\n            this.loadingService.present(this.translations.msg_caching);\n          });\n          this.surveyCacheService.cacheAllMedia(this.study);\n        }\n        // setup the study task objects\n        await this.studyTasksService.generateStudyTasks(study);\n        // setup the notifications\n        this.notificationsService.setNext30Notifications();\n\n        this.loadStudyDetails();\n        const studyTasks = await this.storage.get('study-tasks');\n      });\n  }\n\n  /**\n   * Loads the details of the current study, including overdue tasks\n   */\n  loadStudyDetails() {\n    this.studyTasksService.getTaskDisplayList().then((tasks) => {\n      this.task_list = tasks;\n\n      for (const task of this.task_list) {\n        task.moment = moment(task.locale).fromNow();\n      }\n\n      // show the study tasks\n      this.isEnrolledInStudy = true;\n      this.hideEnrolOptions = true;\n\n      // reverse the order of the tasks list to show oldest first\n      this.sortTasksList();\n\n      // hide loading controller if not caching\n      if (!this.loadingService.isCaching) {\n        setTimeout(() => {\n          if (this.loadingService) {\n            // Added this condition\n            this.loadingService.dismiss();\n          }\n        }, 1000);\n      }\n    });\n  }\n\n  /**\n   * Displays an alert to indicate that something went wrong during study enrolment\n   *\n   * @param isQRCode Denotes whether the error was caused via QR code enrolment\n   */\n  async displayEnrolError(isQRCode: boolean) {\n    const msg = isQRCode\n      ? \"We couldn't load your study. Please check your internet connection and ensure you are scanning the correct code.\"\n      : \"We couldn't load your study. Please check your internet connection and ensure you are entering the correct URL or ID.\";\n    const alert = await this.alertController.create({\n      header: 'Oops...',\n      message: msg,\n      cssClass: 'alertStyle',\n      buttons: ['Dismiss'],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Displays a message when camera permission is not allowed\n   */\n  async displayBarcodeError() {\n    const alert = await this.alertController.create({\n      header: 'Permission Required',\n      cssClass: 'alertStyle',\n      message: this.translations.msg_camera,\n      buttons: ['Dismiss'],\n    });\n    await alert.present();\n  }\n\n  /**\n   * Reverses the list of tasks for sorting purposes\n   */\n  sortTasksList() {\n    this.task_list.reverse();\n  }\n\n  /**\n   * Refreshes the list of tasks\n   */\n  doRefresh(refresher: RefresherCustomEvent) {\n    // What i\n    if (!this.loadingService.isLoading) {\n      this.ionViewWillEnter();\n    }\n    setTimeout(() => {\n      refresher.target.complete();\n    }, 250);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  isLoading = false;\n  isCaching = false;\n\n  constructor(public loadingController: LoadingController) {}\n\n  /**\n   * Displays the loading dialog\n   *\n   * @param msg The message to display in the loading dialog\n   */\n  async present(msg: string) {\n    this.isLoading = true;\n    return await this.loadingController\n      .create({\n        message: msg,\n        spinner: 'crescent',\n        duration: 7000,\n      })\n      .then((a) => {\n        a.present().then(() => {\n          if (!this.isLoading) {\n            a.dismiss().then(() => console.log('abort presenting'));\n          }\n        });\n      });\n  }\n\n  /**\n   * Dismisses the loading dialog\n   */\n  async dismiss() {\n    this.isLoading = false; // Seems unnecessary as dismiss() only runs if isLoading is false\n    this.isCaching = false;\n    const loader = await this.loadingController.getTop();\n    if (loader) {\n      // Added this condition\n      return loader.dismiss();\n    } else {\n      return;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Task } from 'types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService {\n  constructor(\n    private localNotifications: LocalNotifications,\n    private storage: Storage\n  ) {}\n\n  /**\n   * Schedules a notification, taking parameters from a task\n   *\n   * @param task The task that the notification is for\n   */\n  scheduleDummyNotification() {\n    this.localNotifications.schedule({\n      title: 'Hello',\n      text: 'World',\n      foreground: true,\n      trigger: { at: new Date(new Date().getTime() + 10000) },\n      smallIcon: 'res://notification_icon',\n      icon: 'res//notification_icon',\n      data: { task_index: 0 },\n      launch: true,\n      wakeup: true,\n      priority: 2,\n    });\n  }\n\n  /**\n   * Schedules a notification, takoing parameters from a task\n   *\n   * @param task The task that the notification is for\n   */\n  scheduleNotification(task: Task) {\n    this.localNotifications.schedule({\n      id: task.task_id,\n      title: task.alert_title,\n      text: task.alert_message,\n      foreground: true,\n      trigger: { at: new Date(Date.parse(task.time)) },\n      smallIcon: 'res://notification_icon',\n      icon: 'res//notification_icon',\n      data: {\n        task_index: task.index,\n        task_id: task.task_id,\n        task_time: task.time,\n      },\n      launch: true,\n      wakeup: true,\n      priority: 2,\n    });\n  }\n\n  /**\n   * Cancels all notifications that have been set\n   */\n  cancelAllNotifications() {\n    this.localNotifications.cancelAll();\n  }\n\n  /**\n   * Sets the next 30 notifications based on the next 30 tasks\n   */\n  async setNext30Notifications() {\n    await this.localNotifications.cancelAll();\n\n    const notificationsEnabled = await this.storage.get(\n      'notifications-enabled'\n    );\n\n    if (notificationsEnabled) {\n      const tasks = await this.storage.get('study-tasks');\n      if (tasks !== null) {\n        let alertCount = 0;\n        for (const task of tasks) {\n          const alertTime = new Date(Date.parse(task.time));\n\n          if (alertTime > new Date()) {\n            if (this.checkTaskIsUnlocked(task, tasks)) {\n              this.scheduleNotification(task);\n              alertCount++;\n            }\n          }\n\n          // only set 30 alerts into the future\n          if (alertCount === 30) {\n            break;\n          }\n        }\n      }\n    }\n\n    /*this.localNotifications.cancelAll().then(() => {\n      this.storage.get('notifications-enabled').then(notificationsEnabled => {\n        if (notificationsEnabled) {\n          this.storage.get('study-tasks').then((tasks) => {\n            if (tasks !== null) {\n              var alertCount = 0;\n              for (var i = 0; i < tasks.length; i++) {\n                var task = tasks[i];\n                var alertTime = new Date(Date.parse(task.time));\n\n                if (alertTime > new Date()) {\n                  if (this.checkTaskIsUnlocked(task, tasks)) {\n                    this.scheduleNotification(task);\n                    alertCount++;\n                  }\n                }\n\n                // only set 30 alerts into the future\n                if (alertCount === 30) break;\n              }\n            }\n          });\n        }\n      });\n    });*/\n  }\n\n  /**\n   *\n   * @param task\n   * @param study_tasks\n   */\n  checkTaskIsUnlocked(task: Task, study_tasks: Task[]) {\n    // get a set of completed task uuids\n    const completedUUIDs = new Set();\n    for (const t of study_tasks) {\n      if (t.completed) {\n        completedUUIDs.add(t.uuid);\n      }\n    }\n\n    // get the list of prereqs from the task\n    const prereqs = task.unlock_after;\n    let unlock = true;\n    for (const prereq of prereqs) {\n      if (!completedUUIDs.has(prereq)) {\n        unlock = false;\n        break;\n      }\n    }\n\n    return unlock;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  FileTransfer,\n  FileTransferObject,\n} from '@ionic-native/file-transfer/ngx';\nimport { LoadingService } from '../loading/loading-service.service';\nimport { File, FileEntry } from '@ionic-native/file/ngx';\nimport { Storage } from '@ionic/storage-angular';\nimport { Media, Study } from 'types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SurveyCacheService {\n  win: any = window;\n\n  mediaToCache: { [id: string]: string } = {};\n  videoThumbnailsToCache: object = {};\n  localMediaURLs: { [id: string]: string } = {};\n  localThumbnailURLs: object = {};\n  mediaCount = 0;\n  mediaDownloadedCount = 0;\n\n  constructor(\n    private fileTransfer: FileTransfer,\n    private file: File,\n    private storage: Storage,\n    private loadingService: LoadingService\n  ) {}\n\n  /**\n   * Downloads a remote file and converts it to a local URL\n   *\n   * @param url Remote URL to a media file\n   */\n  async downloadFile(url: string): Promise<string> {\n    try {\n      const transfer: FileTransferObject = this.fileTransfer.create();\n\n      // get the fileName from the URL\n      const urlSplit = url.split('/');\n      const fileName = urlSplit[urlSplit.length - 1];\n      console.log('fileName: ' + fileName);\n      const file: FileEntry = await transfer.download(\n        url,\n        this.file.dataDirectory + fileName,\n        true\n      );\n      console.log('file: ' + file);\n      return file.toURL();\n    } catch (error) {\n      console.log('error: ' + error);\n      return '';\n    }\n  }\n\n  /**\n   * Gets all of the remote URLs from the media elements in this study\n   *\n   * @param study The study protocol\n   */\n  getMediaURLs(study: Study) {\n    // get banner url\n    // @ts-ignore\n    this.mediaToCache.banner = study.properties.banner_url;\n\n    // get urls from media elements\n    for (const module of study.modules) {\n      for (const section of module.sections) {\n        const mediaQuestions = section.questions.filter(\n          (question): question is Media => question.type === 'media'\n        );\n        for (const question of mediaQuestions) {\n          this.mediaToCache[question.id] = question.src;\n        }\n      }\n    }\n    // set mediaCount to be number of media items\n    this.mediaCount = Object.keys(this.mediaToCache).length;\n  }\n\n  /**\n   * Gets all of the media URLs from the study protocol and downloads the files\n   *\n   * @param study The study protocol\n   */\n  cacheAllMedia(study: Study) {\n    this.mediaCount = 0;\n    this.mediaDownloadedCount = 0;\n    // map media question ids to their urls\n    this.getMediaURLs(study);\n    this.downloadAllMedia();\n  }\n\n  /**\n   * Downloads all of the media items from the remote URLs\n   */\n  downloadAllMedia() {\n    // download all media items\n    const keys = Object.keys(this.mediaToCache);\n    for (const key of keys) {\n      this.downloadFile(this.mediaToCache[key]).then((entryURL) => {\n        this.localMediaURLs[key] =\n          this.win.Ionic.WebView.convertFileSrc(entryURL);\n        this.mediaDownloadedCount = this.mediaDownloadedCount + 1;\n        this.checkIfFinished();\n      });\n    }\n  }\n\n  /**\n   * Checks if all of the media has been downloaded, if so update the protocol\n   */\n  checkIfFinished() {\n    if (this.mediaDownloadedCount === this.mediaCount) {\n      this.updateMediaURLsInStudy();\n    }\n  }\n\n  /**\n   * Replaces the remote URLs for media items with the local URLs\n   */\n  updateMediaURLsInStudy() {\n    this.storage.get('current-study').then((studyString) => {\n      try {\n        const studyObject = JSON.parse(studyString);\n        // update the banner url first\n        // @ts-ignore\n        studyObject.properties.banner_url = this.localMediaURLs.banner;\n\n        // update the other media items to the corresponding local URL\n        // get urls from media elements\n        for (const module of studyObject.modules) {\n          for (const section of module) {\n            for (const question of section) {\n              if (question.id in this.localMediaURLs) {\n                question.src = this.localMediaURLs[question.id];\n              }\n              if (question.subtype === 'video') {\n                // @ts-ignore\n                question.thumb = this.localMediaURLs.banner;\n              }\n            }\n          }\n        }\n\n        // update the study protocol in storage\n        this.storage.set('current-study', JSON.stringify(studyObject));\n      } catch (e) {\n        console.log('error: ' + e);\n      }\n\n      // dismiss the loading spinner\n      if (this.loadingService) {\n        // Added this condition\n        this.loadingService.dismiss();\n      }\n    });\n  }\n}\n","export class ChangeTheme {\n  public static preferenceColor: string;\n\n  static initializeTheme() {\n    this.setTheme(localStorage.preferenceTheme === 'dark');\n  }\n\n  static setTheme(darkColor: boolean) {\n    this.preferenceColor = darkColor ? 'dark' : 'light';\n\n    document.body.setAttribute('color-theme', this.preferenceColor);\n    localStorage.preferenceTheme = this.preferenceColor;\n  }\n  static getTheme() {\n    return this.preferenceColor;\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}